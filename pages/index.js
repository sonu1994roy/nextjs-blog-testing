
import Head from 'next/head'
import Slider from 'react-slick'
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import { useEffect, useState } from "react"
import Link from 'next/link'
import { useRouter } from "next/router";
import postitem from "../modal/postitem";
import mongoose from "mongoose";
import React from 'react';
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';





export default function Home(props) {
    const router = useRouter()
    const [Books, setBooks] = useState(props.itms.reverse())
    const [story, setstory] = useState(props.story);
    const [poeam, setpoeam] = useState(props.poeam)
    const [stddy, setstddy] = useState(props.studdy)

    const heroSlide = {
        infinite: true,
        dots: true,
        slidesToShow: 1,
        slidesToScroll: 1,
        lazyLoad: true,
        autoplay: true,
        speed: 500,
        autoplay: true,
        responsive: [
            {
                breakpoint: 1024,
                heroSlide: {
                    slidesToShow: 3,
                    slidesToScroll: 3,
                    infinite: true,
                    dots: true
                }
            },
            {
                breakpoint: 600,
                heroSlide: {
                    slidesToShow: 2,
                    slidesToScroll: 2,
                    initialSlide: 2
                }
            },
            {
                breakpoint: 480,
                heroSlide: {
                    slidesToShow: 1,
                    slidesToScroll: 1
                }
            }
        ]


    };
    const settings = {
        dots: true,
        infinite: false,
        speed: 500,
        slidesToShow: 4,
        slidesToScroll: 4,
        initialSlide: 0,
        responsive: [
            {
                breakpoint: 1024,
                settings: {
                    slidesToShow: 3,
                    slidesToScroll: 3,
                    infinite: true,
                    dots: true
                }
            },
            {
                breakpoint: 600,
                settings: {
                    slidesToShow: 2,
                    slidesToScroll: 2,
                    initialSlide: 2
                }
            },
            {
                breakpoint: 480,
                settings: {
                    slidesToShow: 1,
                    slidesToScroll: 1
                }
            }
        ]
    };

    const [DomLoaded, setDomLoaded] = useState(false);

    useEffect(() => {
        setDomLoaded(true);
    }, []);

    // subscribe user update 

    const [Issubscribe, setIssubscribe] = useState({
        Subscribe: "",

    })
    const [msg, setmsg] = useState()

    const { Subscribe } = Issubscribe;
   
    const handleSubmit = async (e) => {
        e.preventDefault()
        await SubscribeUsered()

        await setIssubscribe({ ...Issubscribe, Subscribe: "" })
    }
    const SubscribeUsered = async () => {
        try {
            const userSbscrib = await fetch(`/api/subscribe`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(Issubscribe)
            })
            let res = await userSbscrib.json()
            if (res.error) {
                setmsg(res.error)

            } else {
                setmsg(res.sucsess)
            }
        }
        catch {
            alert("server error")
        }

    }

    const handleChange = (e) => {
        const { name, value } = e.target;
        setIssubscribe({ ...Issubscribe, [name]: value })
    }


    return (
        <>
            {DomLoaded &&

                <div>
                    <Head>
                        <title>Sri-Publicatins.com</title>
                        <meta name="description" content="Generated by create next app" />
                        <link rel="icon" href="/favicon.ic" />
                    </Head>
                    {/* <!-- home section starts  --> */}

                    <Slider {...heroSlide}>
                        {Books.slice(0, 3).map((data) => {
                            return (
                                <section key={data._id} className="home" id="home">

                                    <div className="row">

                                        <div className="content">
                                            <h3>{data.title.slice(0, 40)}..</h3>
                                            <p>{data.desc.slice(0, 400)}..</p>
                                            <a style={{ cursor: "pointer" }} onClick={() => router.push(`/series/${data.slug}`)} className="btn">Read More</a>
                                        </div>

                                        <div className="swiper books-slider">
                                            <div className="d-block">
                                                <a style={{ cursor: "pointer" }} onClick={() => router.push(`/series/${data.slug}`)} className="swiper-slide"><img src={data.img} alt="" /></a>
                                            </div>
                                            <img src="image/stand.png" className="stand" alt="" />
                                        </div>

                                    </div>

                                </section>
                            )
                        })}


                    </Slider>


                    {/* <!-- home section ense  -->
    
    <!-- icons section starts  --> */}

                    <section className="icons-container">
                        <div className="icons">
                            <i className="fas fa-book"></i>
                            <div className="content">
                                <h3>Books Sale</h3>
                                <p>All Over India</p>
                            </div>
                        </div>

                        <div className="icons">
                            <i className="fas fa-shipping-fast"></i>
                            <div className="content">
                                <h3>free shipping</h3>
                                <p>order over $100</p>
                            </div>
                        </div>

                        {/* <div className="icons">
                            <i className="fas fa-redo-alt"></i>
                            <div className="content">
                                <h3>easy returns</h3>
                                <p>10 days returns</p>
                            </div>
                        </div> */}

                        <div className="icons">
                            <i className="fas fa-headset"></i>
                            <div className="content">
                                <h3>24/7 support</h3>
                                <p>call us anytime</p>
                            </div>
                        </div>

                    </section>

                    {/* <!-- icons section ends -->
    
    <!-- featured section starts  --> */}


                    <section className="featured" id="featured">

                        <h1 className="heading"> <span>
                            <Link href="/series/f_story" passHref>
                                <a className="card-link" >नवीन प्रकाशन</a></Link>
                        </span> </h1>

                        <div className="swiper featured-slider">


                            <Slider {...settings}>
                                {Books.slice(0, 10).map((data) => {
                                    return (
                                        <div key={data._id} className="swiper-slide box">
                                            <div className="icons">
                                                <h5>
                                                    <div className="price">Buy Now at ${data.price}</div>
                                                </h5>
                                            </div>
                                            <div className="image ">
                                                <img className="img-fulid " src={data.img} alt="" />
                                            </div>
                                            <div className="content">
                                                <h3>{data.title.slice(0, 20)}..</h3>
                                                <p className="price">{data.type.slice(0, 15)}..</p>
                                                <Link className="btn" href={`/series/${data.slug}`} passHref ><a >Read More</a></Link>

                                            </div>
                                        </div>
                                    )
                                })}
                            </Slider>

                        </div>

                    </section>

                    {/* <!-- featured section ends -->
    
    <!-- newsletter section starts --> */}

                    <section className="newsletter">

                        <form onSubmit={handleSubmit}>
                            <h3>subscribe for latest updates</h3>
                            <input type="email" name="Subscribe" value={Subscribe}

                                onChange={handleChange} placeholder="enter your email" id="" className="box" />

                            <p >{msg}</p>
                            <input type="submit" value="subscribe" className="btn" />
                        </form>

                    </section>

                    {/* <!-- newsletter section ends -->
    
    <!-- arrivals section starts  --> */}

                    <section className="arrivals" id="arrivals">

                        <h1 className="heading"> <span>
                            <Link href="/series/f_story" passHref>
                                <a className="card-link" >रोचक कहानियां</a></Link>
                        </span></h1>

                        <div className="swiper arrivals-slider">
                            <Slider {...settings}>
                                {story.slice(0, 20).map((data) => {
                                    const date = new Date(data.createdAt)
                                    const formattedDate = date.toLocaleDateString("en-GB", {
                                        day: "numeric",
                                        month: "numeric",
                                        year: "numeric"
                                    })
                                    return (
                                        <div key={data._id} style={{ width: "65%" }} className="swiper-slide box">
                                            <Link href={`/series/${data.slug}`}>
                                                <a>
                                                    <div className="image">
                                                        <img src={data.img} className="card-img-top" alt="..." />
                                                    </div>

                                                    <div className="card-body content">
                                                        <h5 className="card-title">{data.title.slice(0,25)}..</h5>
                                                        <p className="card-text">{data.desc.slice(0,50)}..</p>
                                                    </div>
                                                    <div className="card-footer">
                                                        <small className="text-muted">Created At : {formattedDate}</small>
                                                    </div>

                                                </a>
                                            </Link>
                                        </div>
                                    )
                                })}
                            </Slider>


                        </div>


                    </section>
                    <section className="arrivals" id="arrivals">

                        <h1 className="heading"> <span>
                            <Link href="/series/poeam" passHref>
                                <a className="card-link" >बाल कविताएं</a></Link>
                        </span></h1>

                        <div className="swiper arrivals-slider">

                            <Slider {...settings}>
                                {poeam.slice(0, 20).map((data) => {
                                    const date = new Date(data.createdAt)
                                    const formattedDate = date.toLocaleDateString("en-GB", {
                                        day: "numeric",
                                        month: "numeric",
                                        year: "numeric"
                                    })
                                    return (
                                        <div key={data._id} style={{ width: "65%" }} className="swiper-slide box">
                                            <Link href={`/series/${data.slug}`}>
                                                <a>
                                                    <div className="image ">
                                                        <img src={data.img} className="card-img-top" alt="..." />
                                                    </div>

                                                    <div className="card-body content">
                                                    <h5 className="card-title">{data.title.slice(0,25)}..</h5>
                                                        <p className="card-text">{data.desc.slice(0,50)}..</p>
                                                    </div>
                                                    <div className="card-footer">
                                                        <small className="text-muted">Created At: {formattedDate}</small>
                                                    </div>

                                                </a>
                                            </Link>
                                        </div>

                                    )
                                })}
                            </Slider>

                        </div>

                    </section>
                    {/* <!-- arrivals section ends -->
    
    <!-- deal section starts  --> */}

                    <section className="deal">

                        <div className="content">
                            <h3>deal of the day</h3>
                            <h1>@ Hurry Up...</h1>
                            <p>यहाँ दी गई कहानियाँ, नाटक और कविताएँ विषय सामग्री जैसे कि किताब देखने या ख़रीदने के लिए दिए गए Link @Shop Now पर  क्लिक करे..</p>
                            <Link href="/series/books" passHref>
                            <a  className="btn">shop now</a></Link>
                        </div>

                        <div className="image">
                            <img src="image/deal-img.jpg" alt="" />
                        </div>

                    </section>

                    {/* <!-- deal section ends -->
    
    <!-- reviews section starts  --> */}


                    {/*     
    <!-- reviews section ends -->
    
    <!-- blogs section starts  --> */}

                    <section className="blogs" id="blogs">

                        <h1 className="heading"> <span>
                            <Link href="/series/f_story" passHref>
                                <a className="card-link" >अन्य विषय</a></Link>
                        </span></h1>
                        <div className='link-box'>
                            <div className='row  d-wrap m-auto ' style={{ justifyContent: "center", rowGap: "2rem", gap: "2rem " }}>

                                {stddy.reverse().map((data) => {
                                    return (

                                       
                                        <h4 key={data._id}>
                                       
                                            <li className='list-group-item'><Link href={`/series/${data.slug}`}><a >{data.slug.slice(0,50)}</a></Link>
                                            </li>

                                        </h4>
                                    )
                                })}

                            </div>
                        </div>
                    </section>

                </div>

            }
        </>
    )
}


export async function getServerSideProps(context) {
    if (!mongoose.connections[0].readyState) {
        await mongoose.connect(process.env.MONGO_URL)
    }
    let story = await postitem.find({ catogery: 'Story' })
    let itms = await postitem.find({ catogery: 'Books' })
    let studdy = await postitem.find({ catogery: "Studdy" })
    let poeam = await postitem.find({ catogery: "Poem" })
    return {
        props: {
            itms: JSON.parse(JSON.stringify(itms)),
            story: JSON.parse(JSON.stringify(story)),
            studdy: JSON.parse(JSON.stringify(studdy)),
            poeam: JSON.parse(JSON.stringify(poeam)),

        }, // will be passed to the page component as props
    }
}
